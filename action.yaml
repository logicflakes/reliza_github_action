name: 'RelizaHub Sumbit Build And Submit Release metadata action'
description: 'Greet someone'
inputs:
  registry_username:
    description: "Username for image registry"
    required: true
  registry_password:
    description: "Password for image registry"
    required: true
  registry_host:
    description: "Host for image registry"
    required: true
  image_namespace:
    description: "Namespace of the image on registry"
    required: true
  image_name:
    description: "Name of the image"
    required: true
  reliza_api_id:
    description: "Reliza Hub API ID"
    required: true
  reliza_api_key:
    description: "Reliza Hub API KEY"
    required: true
  reliza_api_url:
    description: "Reliza Hub API URL"
    required: true
runs:
  using: "composite"
  steps:
    - name: Record build start 
      run: echo "BUILD_START=$(date -Iseconds)" >> $GITHUB_ENV
      shell: bash
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 200
    - name: Docker Setup Buildx
      # You may pin to the exact commit or the version.
      # uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325
      uses: docker/setup-buildx-action@v2.2.1
    - name: Login to Docker Registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{inputs.registry_host}}
        username: ${{inputs.registry_username}}
        password: ${{inputs.registry_password}}
    - name: Get Version
      shell: bash
      run: |
        set -x
        set -e
        reliza_ver=$(docker run --rm relizaio/reliza-cli getversion -k ${{ inputs.reliza_api_key }} -i ${{ inputs.reliza_api_id }} -u ${{ inputs.reliza_api_url }} -b ${{github.ref_name}} --metadata GitHub)
        echo "completed getting ver"
        echo $reliza_ver
        echo "RLZ_VER_JSON=$reliza_ver" >> $GITHUB_ENV
    - name: Extract Actual Version From JSON
      shell: bash
      run: |
        full_ver=$(echo $RLZ_VER_JSON | jq -r ".version")
        # version without meta for docker registry
        short_ver=$(echo $RLZ_VER_JSON | jq -r ".dockerTagSafeVersion")
        echo "RLZ_FULL_VER=$full_ver" >> $GITHUB_ENV
        echo "RLZ_SHORT_VER=$short_ver" >> $GITHUB_ENV
    - name: Instantiate Reliza status as Rejected to handle possible build failure
      shell: bash
      run: echo "--status rejected " > reliza_command
    - name: Build and push docker container to Reliza Hub Registry
      shell: bash
      continue-on-error: true
      run: |
        docker build -t ${{inputs.image_namespace}}/${{inputs.image_name}}:$RLZ_SHORT_VER -t ${{inputs.image_namespace}}/${{inputs.image_name}}:latest --build-arg VERSION=$RLZ_FULL_VER  \
          --build-arg CI_ENV=github${{github.sha}} --build-arg GIT_COMMIT=${{github.sha}} --build-arg GIT_BRANCH=${{github.ref_name}} .
        docker_sha_256=$(docker push ${{inputs.image_namespace}}/${{inputs.image_name}}:$RLZ_SHORT_VER | grep sha256 | cut -f 3 -d ' ')
        # push latest also
        docker push ${{inputs.image_namespace}}/${{inputs.image_name}}:latest
        # save sha256 to env var
        echo "DOCKER_SHA_256=$docker_sha_256" >> $GITHUB_ENV
        echo "--status complete " > reliza_command
    - name: Extract Last Release Commit And Prepare List Of Commits
      shell: bash
      run: |
        last_commit=$(docker run --rm relizaio/reliza-cli getlatestrelease -i ${{ inputs.reliza_api_id }} -k ${{ inputs.reliza_api_key }} -u ${{ inputs.reliza_api_url }} --branch ${{github.ref_name}} | jq -r ".sourceCodeEntryDetails.commit")
        if [ ! -z "$last_commit" ]
        then
          echo -n "--commits $(git log $last_commit..${{github.sha}} --date=iso-strict --pretty='%H|||%ad|||%s' | base64 -w 0) " >> reliza_command
        fi    
    - name: Submit metadata to Reliza Hub
      shell: bash
      run: |
        echo -n "-b ${{github.ref_name}} --vcstype git --commit ${{github.sha}} -k ${{ inputs.reliza_api_key }} \
          --commitmessage \"$(git log -1 --pretty='%s')\" \
          -i ${{ inputs.reliza_api_id }} -u ${{ inputs.reliza_api_url }} --vcsuri github.com/${{github.repository}} \
          --date $(git log -1 --date=iso-strict --pretty='%ad') \
          -v $RLZ_FULL_VER " >> reliza_command
        echo -n "--artid ${{inputs.image_namespace}}/${{inputs.image_name}} " >> reliza_command
        echo -n "--artbuildid github${{github.action}}${{github.sha}} " >> reliza_command
        echo -n "--artbuilduri https://github.com/${{github.repository}}/actions/runs/${{github.run_id}} " >> reliza_command
        echo -n "--artcimeta GitHub Actions " >> reliza_command
        echo -n "--arttype Docker " >> reliza_command
        if [[ $DOCKER_SHA_256 != "" ]]
        then
          echo -n "--artdigests $DOCKER_SHA_256 " >> reliza_command
        fi
        echo -n "--datestart $BUILD_START " >> reliza_command
        echo -n "--dateend $(date -Iseconds) " >> reliza_command
        # debug
        cat reliza_command
        # send data
        echo docker run --rm relizaio/reliza-cli addrelease $(cat reliza_command) > rlz_cmd_exec
        eval $(cat rlz_cmd_exec)
    - name: Fail build if reliza status is rejected
      shell: bash
      run: |
        status_rejected_check=$(grep 'status rejected' reliza_command | wc -l)
        if [ "$status_rejected_check" != "0" ]
        then
          echo "Failing build since Reliza build Status is rejected"
          exit 1
        fi